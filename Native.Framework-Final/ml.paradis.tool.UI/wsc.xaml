<Page x:Class="ml.paradis.tool.UI.wsc"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ml.paradis.tool.UI"
         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      mc:Ignorable="d" 
      d:DesignHeight="120" d:DesignWidth="700"    >
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <!-- primary colors -->
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Blue.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <SolidColorBrush x:Key="PrimaryHueLightBrush" Color="{StaticResource Primary100}" />
                    <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush" Color="{StaticResource Primary100Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueMidBrush" Color="{StaticResource Primary500}" />
                    <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkBrush" Color="{StaticResource Primary600}" />
                    <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush" Color="{StaticResource Primary600Foreground}" />
                </ResourceDictionary>
                <!-- accent color -->
                <ResourceDictionary>
                    <ResourceDictionary.MergedDictionaries>
                        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.Lime.xaml" />
                    </ResourceDictionary.MergedDictionaries>
                    <SolidColorBrush x:Key="SecondaryAccentBrush" Color="{StaticResource Accent400}" />
                    <SolidColorBrush x:Key="SecondaryAccentForegroundBrush" Color="{StaticResource Accent400Foreground}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="ToggleButton" x:Key="stlToggleButton">
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border x:Name="Back" Background="#F7FDF7" BorderThickness="1" BorderBrush="Transparent">
                                <Path Name="PathFill" Fill="#59CA4F" Width="8" Height="6" StrokeThickness="0" Data="M5,0 L10,10 L0,10 z" RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="PathFill" Property="Fill" Value="White"></Setter>
                                    <Setter TargetName="Back" Property="Background" Value="#59CA4F"></Setter>
                                    <Setter TargetName="Back" Property="BorderBrush" Value="#59CA4F"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}"/>
            <Style x:Key="EchoTextbox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignComboBoxEditableTextBox}"/>
            <Style TargetType="ComboBox"   >
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="HorizontalAlignment" Value="Left"></Setter>
                <Setter Property="Foreground" Value="Black"></Setter>
                <Setter Property="Height" Value="30"></Setter>
                <Setter Property="Margin" Value="0,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid Background="#F7FDF7">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.7*"/>
                                    <ColumnDefinition Width="0.3*" MaxWidth="30"/>
                                </Grid.ColumnDefinitions>
                                <TextBox  Grid.Column="0" IsReadOnly="True" TextAlignment="Center" VerticalContentAlignment="Center" Text="{TemplateBinding Text}"></TextBox>
                                <Border  Grid.Column="0" BorderThickness="1,1,0,1" BorderBrush="#81D779" CornerRadius="1,0,0,1">
                                </Border>
                                <Border Grid.Column="1" BorderThickness="0,1,1,1" BorderBrush="#81D779" CornerRadius="0,1,1,0">
                                    <ToggleButton Style="{StaticResource stlToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"></ToggleButton>
                                </Border>
                                <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                    <Border CornerRadius="1" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                        <Border.Effect>
                                            <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                        </Border.Effect>
                                        <ScrollViewer Margin="4,6,4,6"  MaxHeight="{TemplateBinding MaxDropDownHeight}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                            <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <local:SelectedToBool x:Key="SelectedToBool" />
        </ResourceDictionary>
    </Page.Resources>
    <Grid>
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid>
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                    <!--<Button Style="{StaticResource MaterialDesignFlatButton}" Padding="0" Width="30" Margin="0,0,7,0" Click="SaveButton_Click" ToolTip="Save to config">
                        <materialDesign:PackIcon Kind="ContentSave" Width="25" Height="25"/>
                    </Button>-->
                    <TextBlock Text="Address" VerticalAlignment="Center"/>
                    <ComboBox   materialDesign:HintAssist.Hint="   Target Server" Grid.Column="1"
            Width="200" Margin="7,0,7,0" Name="SelectServer"   SelectionChanged="SelectServer_SelectionChanged"/>
                    <Button Style="{StaticResource MaterialDesignFlatButton}"  ToolTip="Connect to selected server" Click="ConnectButton_Click" IsEnabled="{Binding SelectedIndex,ElementName=SelectServer,Converter={StaticResource SelectedToBool}}" >
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Connect" VerticalAlignment="Center"/>
                            <!--<materialDesign:PackIcon Kind="LanConnect" Width="30" Height="30"/>-->
                        </StackPanel>
                    </Button>
                    <!--<Button Style="{StaticResource MaterialDesignFlatButton}" Padding="0" ToolTip="Add Server" Click="AddServerButton_Click">
                        <materialDesign:PackIcon Kind="Add" Width="30" Height="30"/>
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Padding="0" ToolTip="Remove Selected Server" IsEnabled="{Binding SelectedIndex,ElementName=SelectServer,Converter={StaticResource SelectedToBool}}" Click="RemoveServerButton_Click">
                        <materialDesign:PackIcon Kind="Remove" Width="30" Height="30"/>
                    </Button>-->
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Padding="10,0" ToolTip="Clear" Click="CleanButton_Click" Content="清屏"/>
                </StackPanel>
            </Grid>
            <RichTextBox  Margin="5" Background="AliceBlue" IsReadOnly="True" Grid.Row="1" Name="OutPutText" Block.LineHeight="1"/>
            <Grid Grid.Row="2" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox FontSize="16" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" MaxHeight="150" materialDesign:HintAssist.Hint="Message Content" Name="SendText" VerticalAlignment="Bottom"/>
                <ComboBox   materialDesign:HintAssist.Hint="   Message type"   Grid.Column="1"
                 Width="150"    Margin="7,0,7,0" Name="SelectAction"  >
                    <ComboBoxItem Content="RawText(%pwd%)" />
                    <ComboBoxItem Content="Command"/>
                </ComboBox>
                <Button Grid.Column="2" IsEnabled="{Binding SelectedIndex,ElementName=SelectAction,Converter={StaticResource SelectedToBool}}" Style="{StaticResource MaterialDesignFlatButton}" Click="SendMessageButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Send" Margin="0,0,4,0"/>
                        <materialDesign:PackIcon Kind="Send" Height="18" Width="18"/>
                    </StackPanel>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Page>
